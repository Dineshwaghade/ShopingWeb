@model OnlineShopingWeb.Models.ProductModel.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<head>
    @*<link href="~/Content/css/CustomStyle.css" rel="stylesheet" />*@
    <link href="~/Content/css/ProfileStyleSheet.css" rel="stylesheet" />
</head>
<section class="content-header">
    <h1>
        Add Product
        @*   <small>Preview</small>*@
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Add Product</li>
    </ol>
</section>

@using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
    <div class="row">
        <div class="col-md-6" style="border:solid 1px blue;">

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Sub Category", htmlAttributes: new { @class = "control-label col-md-4" })
                    @*@Html.LabelFor(model => model.SubCategory_id, "SubCategory_id", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SubCategory_id, @ViewBag.SCList as SelectList, "--select--", htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownList("SubCategory_id", null, htmlAttributes: new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.SubCategory_id, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Product_Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Product_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(model => Model.Product_Image, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">

                        <input type="file" id="browseImage"/>
                        @Html.ValidationMessageFor(model => model.Product_Image, "", new { @class = "text-danger" })
                    </div>
                </div>*@
        @Html.HiddenFor(model=>model.Product_Image)

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
                @if (ViewBag.success != null)
                {
                    <span class="text-success">ViewBag.success </span>
                }

            </div>
        </div>
        <div class="col-md-4 center" style="border:solid 1px red; height:100%; ">
            @*<div class="product-image">

                <img src="~/Images/testimg.jpg" class="img-responsive" id="productimg"/>
                <div class="remove-photo">
                    <span class="glyphicon glyphicon-remove"></span>
                </div>
            </div>*@
            <div class="user-profile">
                <input type="file" class="hidden" id="UploadImage" name="UserImageFile" />
                @{
                    if (Model != null)
                    {
                        if (Model.Product_Image != null)
                        {
                            <img src="@Url.Content(Model.Product_Image)" class="img-responsive" id="UserImage" style="max-height:400px;" />
                        }
                    }
                    else
                    {
                        <img src="~/Images/img-not-found.png" class="img-responsive" id="UserImage" style="max-height:400px;" />

                    }
                }
                <div class="upload-photo" id="ImageUpload">
                    <img src="~/Images/cam-pic.png" class="img-responsive" />
                </div>
                <div class="remove-photo">
                    <span class="glyphicon glyphicon-remove" id="RemoveImage"></span>

                </div>
            </div>


        </div>

    </div>
    </div>


}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/UploadImage2.js"></script>
@*<script>
    $('#browseImage').change(function () {
        if(this.files && this.files[0])
        {
            var fileReader = new FileReader();
            fileReader.readAsDataURL(this.files[0]);
            fileReader.onload = function (x) {
                $('#productimg').attr('src', x.target.result);
            }

            }
        }
    });
</script>*@

